// find
$model = $this->get($id);

if ($model === null) {
	return new NotFound(['message' => '{{ class }} not found.']);
}

// hydrate
$data = $this->normalize($data);
$model = $this->hydrate($model, $data);
$this->hydrateRelationships($model, $data);

// dispatch pre save hooks
$this->dispatch({{ class }}Event::PRE_UPDATE, $model, $data);
$this->dispatch({{ class }}Event::PRE_SAVE, $model, $data);

// validate
$validator = $this->getValidator($model);
if ($validator !== null && !$validator->validate($model)) {
	return new NotValid([
		'errors' => $validator->getValidationFailures()
	]);
}

// save and dispath post save hooks
$rows = $model->save();
$this->dispatch({{ class }}Event::POST_UPDATE, $model, $data);
$this->dispatch({{ class }}Event::POST_SAVE, $model, $data);

$payload = ['model' => $model];

if ($rows === 0) {
	return new NotUpdated($payload);
}

return new Updated($payload);
