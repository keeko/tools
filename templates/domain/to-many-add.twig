// find
$model = $this->get($id);

if ($model === null) {
	return new NotFound(['message' => '{{ class }} not found.']);
}

// pass add to internal logic
try {
	$this->doAdd{{ related_name }}($model, $data);
} catch (ErrorsException $e) {
	return new NotValid(['errors' => $e->getErrors()]);
}

// save and dispatch events
$event = new {{ class }}Event($model);
$this->dispatch({{ class }}Event::PRE_{{ const }}_ADD, $event);
$this->dispatch({{ class }}Event::PRE_SAVE, $event);
$rows = $model->save();
$this->dispatch({{ class }}Event::POST_{{ const }}_ADD, $event);
$this->dispatch({{ class }}Event::POST_SAVE, $event);

if ($rows > 0) {
	return Updated(['model' => $model]);
}

return NotUpdated(['model' => $model]);